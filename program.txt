# HLT, ADD, SUB, STO, LDA,
# BR, BRZ, BRP, IN, OUT, DAT
	IN
	STO	inp
	IN
	STO	orgbase
	IN
	STO	finbase

	
	LDA	orgbase
	STO	num1
	STO	num2
	LDA 	basesqref
	STO	section
	BR	mult
basesqm	LDA	ret
	STO	basesq

	STO	num1
	LDA	orgbase
	STO	num2
	LDA 	basecbref
	STO	section
	BR	mult
basecbm	LDA	ret
	STO	basecb
	
	LDA	inp
	STO	num1
	LDA	ten
	STO	num2
	LDA	

return	LDA	section
	BRZ	basesqm
	SUB	one
	BRZ	basecbm
	

#Mult function
mult	LDA	num1
	SUB	one
	STO	num1
	LDA	num2
	ADD	num2
	STO	num2
	LDA	num1
	BRZ	xmult
	BR	mult
xmult	LDA	num2
	STO	ret
	BR	return
#end mult func


#div function
div	LDA	num1
	STO	temp
divm	LDA	temp
	SUB	num2
	STO	temp
	BRP	addcount
	LDA	count
	STO	ret
	BR	return

addcount	LDA	count
	ADD	one
	STO	count
	BR	div

#end div function

#mod function

mod	LDA	num1
	STO	temp
modm	LDA	temp
	SUB	num2
	STO	temp
	BRP	modm
	LDA	temp
	ADD	num2
	STO	ret
	BR	return
#end mod function

	HLT

#VARIABLES

#used for keeping track of whatever where to return to after func finished
#for recursion etc a stack is needed rather than a static variable
section	DAT	0



#Func vars
num1	DAT
num2	DAT
count	DAT
temp	DAT
ret	DAT


#input vars
inp	DAT
orgbase	DAT
finbase	DAT

basesq	DAT
basecb	DAT


one	DAT	1
ten	DAT	10
zero	DAT	0

basesqref	DAT	0
basecbref	DAT	1

nineninenine	DAT	999







